(self["webpackChunkxstarter_frontend"]=self["webpackChunkxstarter_frontend"]||[]).push([[230],{49410:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>se});var a=n(83673),o=n(62323),i=n(37400),s=n.n(i),l=n(56607),r=n.n(l);const d={style:{width:"10%"}},u={key:0,class:"logo-style",src:s(),style:{"max-width":"100%"}},p={key:1,class:"logo-style",src:r(),style:{"max-width":"100%"}},c={class:"q-gutter-x-sm"},m={class:"col-auto"},y={class:"col-12 q-pa-md segoe-bold text-wr text-center"},h=(0,a._)("div",null," Please Manually Switch To The Goerli Network ",-1),g=(0,a.Uk)(" For More Info On How To Switch Manually Click ");function T(e,t,n,i,s,l){const r=(0,a.up)("q-tab"),T=(0,a.up)("q-tabs"),v=(0,a.up)("q-btn"),b=(0,a.up)("q-toolbar"),k=(0,a.up)("q-badge"),w=(0,a.up)("q-header"),f=(0,a.up)("router-view"),x=(0,a.up)("q-page-container"),_=(0,a.up)("q-footer"),C=((0,a.up)("NoticeModal"),(0,a.up)("WalletConnectModal")),A=(0,a.up)("GeneralModal"),q=(0,a.up)("q-layout");return(0,a.wg)(),(0,a.j4)(q,{view:"hHh lpR fFf"},{default:(0,a.w5)((()=>[(0,a.Wm)(w,{elevated:"",class:(0,o.C_)(["text-white q-pt-sm",{"bg-dark":e.$q.dark.isActive,"bg-light":!e.$q.dark.isActive}]),"height-hint":"98"},{default:(0,a.w5)((()=>[(0,a.Wm)(b,{class:"row justify-between"},{default:(0,a.w5)((()=>[(0,a._)("div",d,[(0,a._)("div",{style:{width:"115px"},onClick:t[0]||(t[0]=t=>e.$router.push("/")),class:"cursor-pointer"},[e.$q.dark.isActive?((0,a.wg)(),(0,a.iD)("img",u)):((0,a.wg)(),(0,a.iD)("img",p))])]),!e.$q.platform.is.mobile||e.$q.platform.is.tablet?((0,a.wg)(),(0,a.j4)(T,{key:0,align:"center",class:(0,o.C_)({"text-dark":!e.$q.dark.isActive,"text-light":e.$q.dark.isActive}),modelValue:e.tabName,"onUpdate:modelValue":t[3]||(t[3]=t=>e.tabName=t)},{default:(0,a.w5)((()=>[(0,a.Wm)(r,{onClick:t[1]||(t[1]=t=>e.$router.push("/ilo")),label:"IDO/ILO",name:"ilo"}),(0,a.Wm)(r,{onClick:t[2]||(t[2]=t=>e.$router.push("/nft")),to:"/nft",label:"NFT",name:"nft"})])),_:1},8,["class","modelValue"])):(0,a.kq)("",!0),(0,a._)("div",c,[(0,a.Wm)(v,{rounded:"",outline:"",size:e.$q.platform.is.mobile?"sm":"md",label:e.connectBtnLabel,icon:e.metamaskInstalled?void 0:"error_outline",color:e.metamaskInstalled?e.darkLightText:"negative",onClick:e.connectOrInstallBtn},null,8,["size","label","icon","color","onClick"]),(0,a.Wm)(v,{round:"",flat:"",color:e.darkLightText,icon:e.$q.dark.isActive?"light_mode":"dark_mode",onClick:e.setDarkMode},null,8,["color","icon","onClick"])])])),_:1}),e.$q.platform.is.mobile?((0,a.wg)(),(0,a.j4)(T,{key:0,align:"center",class:(0,o.C_)({"text-dark":!e.$q.dark.isActive,"text-light":e.$q.dark.isActive}),modelValue:e.tabName,"onUpdate:modelValue":t[7]||(t[7]=t=>e.tabName=t)},{default:(0,a.w5)((()=>[(0,a.Wm)(r,{onClick:t[4]||(t[4]=t=>e.$router.push("/ilo")),label:"ILO",name:"ilo"}),(0,a.Wm)(r,{onClick:t[5]||(t[5]=t=>e.$router.push("/gov")),label:"Governance",name:"gov"},{default:(0,a.w5)((()=>[(0,a.Wm)(k,{label:"Coming Soon",color:e.darkLightText,"text-color":e.darkLightTextReverse,style:{"font-size":"8px"},floating:""},null,8,["color","text-color"])])),_:1}),(0,a.Wm)(r,{onClick:t[6]||(t[6]=t=>e.$router.push("/nft")),to:"/nft",label:"NFT",name:"nft"},{default:(0,a.w5)((()=>[(0,a.Wm)(k,{label:"Coming Soon",color:e.darkLightText,"text-color":e.darkLightTextReverse,style:{"font-size":"8px"},floating:""},null,8,["color","text-color"])])),_:1})])),_:1},8,["class","modelValue"])):(0,a.kq)("",!0)])),_:1},8,["class"]),(0,a.Wm)(x,null,{default:(0,a.w5)((()=>[(0,a.Wm)(f)])),_:1}),(0,a.Wm)(_,{elevated:"",class:(0,o.C_)(["text-white",{"bg-dark":e.$q.dark.isActive,"bg-light":!e.$q.dark.isActive}])},{default:(0,a.w5)((()=>[(0,a.Wm)(b,{class:"justify-center"},{default:(0,a.w5)((()=>[(0,a._)("div",m,[(0,a.Wm)(v,{flat:"",color:e.darkLightText,label:"About xStarter",target:"_blank","icon-right":"open_in_new",type:"a",href:"https://www.xstarter.org/"},null,8,["color"])])])),_:1})])),_:1},8,["class"]),(0,a.kq)("",!0),e.connectedAndPermissioned?(0,a.kq)("",!0):((0,a.wg)(),(0,a.j4)(C,{key:1,modelValue:e.showWalletConnectModal,"onUpdate:modelValue":t[9]||(t[9]=t=>e.showWalletConnectModal=t)},null,8,["modelValue"])),5!==e.chainId?((0,a.wg)(),(0,a.j4)(A,{key:2,modelValue:e.showSwitchChainManual,"onUpdate:modelValue":t[10]||(t[10]=t=>e.showSwitchChainManual=t)},{default:(0,a.w5)((()=>[(0,a._)("div",y,[h,(0,a._)("div",null,[g,(0,a.Wm)(v,{flat:"",type:"a",label:"HERE",style:{"text-decoration":"underline"},href:"https://metamask.zendesk.com/hc/en-us/articles/360043227612-How-to-add-custom-Network-RPC-and-or-Block-Explorer",target:"_blank"})])])])),_:1},8,["modelValue"])):(0,a.kq)("",!0)])),_:1})}n(10071);var v=n(61959),b=n(48825),k=n(76638),w=n(80602),f=n(11990),x=n.n(f),_=n(98580),C=n(81830);const A=JSON.parse('{"Mt":[{"inputs":[{"internalType":"address","name":"xStarterToken_","type":"address"},{"internalType":"address","name":"xStarterDeployer_","type":"address"},{"internalType":"address","name":"xStarterERCDeployer_","type":"address"},{"internalType":"uint256","name":"depositPerProposal_","type":"uint256"},{"internalType":"uint256","name":"minXSTN_","type":"uint256"},{"internalType":"uint256","name":"minXSTNLP_","type":"uint256"},{"internalType":"uint256","name":"blockTime_","type":"uint256"},{"internalType":"address","name":"addressOfDex_","type":"address"},{"internalType":"address","name":"addressOfDexFactory_","type":"address"},{"internalType":"address","name":"admin_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":true,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdministrationTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"proposalAddr_","type":"address"},{"indexed":true,"internalType":"address","name":"caller_","type":"address"},{"indexed":true,"internalType":"address","name":"ILO","type":"address"}],"name":"ILODeployed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposer","type":"address"},{"indexed":true,"internalType":"address","name":"proposalAddr_","type":"address"}],"name":"ILOProposalRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller_","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount_","type":"uint256"}],"name":"TokensDeposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller_","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount_","type":"uint256"}],"name":"TokensWithdrawn","type":"event"},{"inputs":[],"name":"_addressOfDex","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_addressOfDexFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"xStarterGovernance_","type":"address"}],"name":"addGovernance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"xStarterNFT_","type":"address"}],"name":"addNFT","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"minXSTN_","type":"uint256"},{"internalType":"uint256","name":"minXSTNLP_","type":"uint256"}],"name":"changeMinTokensRequirements","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"proposalAddr_","type":"address"},{"internalType":"address","name":"ILOAdmin_","type":"address"}],"name":"deployILOContract","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"proposalAddr_","type":"address"}],"name":"deployXstarterILO","outputs":[{"internalType":"address","name":"ILO","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"depositApprovedToken","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addr_","type":"address"}],"name":"depositBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMinTokensRequirements","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"proposalAddr_","type":"address"}],"name":"getProposal","outputs":[{"components":[{"internalType":"address","name":"proposalAddr","type":"address"},{"components":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"address","name":"admin","type":"address"},{"internalType":"address","name":"fundingToken","type":"address"},{"internalType":"string","name":"tokenName","type":"string"},{"internalType":"string","name":"tokenSymbol","type":"string"},{"internalType":"string","name":"infoURL","type":"string"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"uint8","name":"percentOfTokensForILO","type":"uint8"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isApproved","type":"bool"},{"internalType":"bool","name":"isRegistered","type":"bool"},{"internalType":"bool","name":"isOpen","type":"bool"},{"internalType":"uint256","name":"deployedBlockNumber","type":"uint256"},{"internalType":"uint256","name":"deployedTimestamp","type":"uint256"},{"internalType":"bool","name":"isDeployed","type":"bool"},{"internalType":"address","name":"ILOAddress","type":"address"}],"internalType":"struct ILOProposal","name":"info","type":"tuple"},{"components":[{"internalType":"uint48","name":"contribTimeLock","type":"uint48"},{"internalType":"uint48","name":"liqPairLockLen","type":"uint48"},{"internalType":"uint48","name":"startTime","type":"uint48"},{"internalType":"uint48","name":"endTime","type":"uint48"},{"internalType":"uint256","name":"minPerSwap","type":"uint256"},{"internalType":"uint256","name":"minPerAddr","type":"uint256"},{"internalType":"uint256","name":"maxPerAddr","type":"uint256"},{"internalType":"uint256","name":"softcap","type":"uint256"},{"internalType":"uint256","name":"hardcap","type":"uint256"},{"internalType":"uint256","name":"amountRaised","type":"uint256"},{"internalType":"bool","name":"pairCreated","type":"bool"},{"internalType":"address","name":"liqPairAddr","type":"address"},{"internalType":"address","name":"projectToken","type":"address"},{"internalType":"uint8","name":"percentTokensForTeam","type":"uint8"},{"internalType":"uint8","name":"ILOStatus","type":"uint8"}],"internalType":"struct ILOAdditionalInfo","name":"moreInfo","type":"tuple"}],"internalType":"struct CompactInfo","name":"i_","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"round_","type":"uint256"}],"name":"getProposals","outputs":[{"components":[{"internalType":"address","name":"proposalAddr","type":"address"},{"components":[{"internalType":"address","name":"proposer","type":"address"},{"internalType":"address","name":"admin","type":"address"},{"internalType":"address","name":"fundingToken","type":"address"},{"internalType":"string","name":"tokenName","type":"string"},{"internalType":"string","name":"tokenSymbol","type":"string"},{"internalType":"string","name":"infoURL","type":"string"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"uint8","name":"percentOfTokensForILO","type":"uint8"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isApproved","type":"bool"},{"internalType":"bool","name":"isRegistered","type":"bool"},{"internalType":"bool","name":"isOpen","type":"bool"},{"internalType":"uint256","name":"deployedBlockNumber","type":"uint256"},{"internalType":"uint256","name":"deployedTimestamp","type":"uint256"},{"internalType":"bool","name":"isDeployed","type":"bool"},{"internalType":"address","name":"ILOAddress","type":"address"}],"internalType":"struct ILOProposal","name":"info","type":"tuple"},{"components":[{"internalType":"uint48","name":"contribTimeLock","type":"uint48"},{"internalType":"uint48","name":"liqPairLockLen","type":"uint48"},{"internalType":"uint48","name":"startTime","type":"uint48"},{"internalType":"uint48","name":"endTime","type":"uint48"},{"internalType":"uint256","name":"minPerSwap","type":"uint256"},{"internalType":"uint256","name":"minPerAddr","type":"uint256"},{"internalType":"uint256","name":"maxPerAddr","type":"uint256"},{"internalType":"uint256","name":"softcap","type":"uint256"},{"internalType":"uint256","name":"hardcap","type":"uint256"},{"internalType":"uint256","name":"amountRaised","type":"uint256"},{"internalType":"bool","name":"pairCreated","type":"bool"},{"internalType":"address","name":"liqPairAddr","type":"address"},{"internalType":"address","name":"projectToken","type":"address"},{"internalType":"uint8","name":"percentTokensForTeam","type":"uint8"},{"internalType":"uint8","name":"ILOStatus","type":"uint8"}],"internalType":"struct ILOAdditionalInfo","name":"moreInfo","type":"tuple"}],"internalType":"struct CompactInfo[]","name":"","type":"tuple[]"},{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"proposalAddr_","type":"address"}],"name":"isDeployed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"noOfProposals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"proposalAddr_","type":"address"}],"name":"registerILOProposal","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceAdministration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"setTokenAndLPAddr","outputs":[{"internalType":"address","name":"xStarterToken_","type":"address"},{"internalType":"address","name":"xStarterLP_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAdmin","type":"address"}],"name":"transferAdministration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount_","type":"uint256"}],"name":"withdrawTokens","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"xStarterContracts","outputs":[{"internalType":"address[5]","name":"","type":"address[5]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"xStarterDEXUsed","outputs":[{"internalType":"address","name":"dexAddress","type":"address"},{"internalType":"address","name":"dexFactoryAddress","type":"address"}],"stateMutability":"view","type":"function"}]}'),q={class:"column full-height content-center justify-center"},M=(0,a._)("div",{class:"q-mb-xl segoe-bold text-h4 text-center"}," Connect To Start Using xStarter ",-1),L={class:"row full-width content-center justify-center q-px-md q-mt-lg"},P=(0,a._)("div",{class:"text-h5 text-bold text-center q-my-lg"}," -- OR -- ",-1),$={class:"row full-width content-center justify-center q-px-md "};function I(e,t,n,o,i,s){const l=(0,a.up)("q-btn"),r=(0,a.up)("GeneralModal"),d=(0,a.Q2)("close-popup");return(0,a.wg)(),(0,a.j4)(r,{modelValue:e.showDialog,"onUpdate:modelValue":t[0]||(t[0]=t=>e.showDialog=t)},{default:(0,a.w5)((()=>[(0,a._)("div",q,[M,(0,a._)("div",L,[(0,a.Wm)(l,{outline:"",label:"Connect With Metamask",color:e.metamaskInstalled?e.darkLightText:"negative",disable:!e.metamaskInstalled,style:{"min-height":"50px","border-radius":"10px"},class:"col-lg-auto col-12 segoe-bold text-12",onClick:e.connectEthereum,icon:"img:metamask.svg"},null,8,["color","disable","onClick"])]),P,(0,a._)("div",$,[(0,a.wy)((0,a.Wm)(l,{outline:"",label:"Connect With WalletConnect",color:e.metamaskInstalled?e.darkLightText:"negative",disable:!e.metamaskInstalled,style:{"min-height":"50px","border-radius":"10px"},class:"col-lg-auto col-12 segoe-bold text-12",onClick:e.connectEthereumWalletConnect,icon:"img:walletconnect_logo.svg"},null,8,["color","disable","onClick"]),[[d]])])])])),_:1},8,["modelValue"])}var J=n(86518);const O=(0,a.aZ)({name:"WalletConnectModal",setup(){const e=(0,a.f3)("$connectEthereum"),t=(0,a.f3)("$connectEthereumWalletConnect"),n=(0,a.f3)("$metamaskInstalled");return{connectEthereum:e,connectEthereumWalletConnect:t,metamaskInstalled:n}},components:{GeneralModal:J.Z},props:{modelValue:{type:Boolean,required:!0},persistent:{type:Boolean,default:!1}},computed:{showDialog:{set:function(e){this.$emit("update:modelValue",e)},get:function(){return this.modelValue}},darkLightText(){return this.$q.dark.isActive?"light":"dark"},darkLightTextReverse(){return this.$q.dark.isActive?"dark":"light"}}});var S=n(48240),W=n(60677),N=n(7518),R=n.n(N);O.render=I;const D=O;R()(O,"components",{QBtn:S.Z}),R()(O,"directives",{ClosePopup:W.Z});const V={class:"row content-center justify-center"},Z=(0,a._)("div",{class:"q-mb-xl segoe-bold text-h4 text-center"}," Disclaimer ",-1),B=(0,a._)("div",{class:"q-mb-md q-px-xl text-body1 text-center"}," xStarter is a decentralized and community governed initial liquidity offering (ILO) platform. Anyone can propose an ILO and the community then votes to accept or reject the proposal. This shouldn't be taken as a form of due diligence and each person using this platform must understand the risk involved in the decentralized nature fo cryptocurrencies. You assume all risk involved in using this platform and agree to do your own research and due diligence before using this platform ",-1),E=(0,a._)("div",{class:"q-mb-md segoe-bold q-pa-xl text-body1 text-center"}," You assume all risk involved in using this platform and agree to do your own research and due diligence before using this platform ",-1);function j(e,t,n,o,i,s){const l=(0,a.up)("q-btn"),r=(0,a.up)("GeneralModal");return(0,a.wg)(),(0,a.j4)(r,{modelValue:e.showDialog,"onUpdate:modelValue":t[0]||(t[0]=t=>e.showDialog=t),persistent:!0},{default:(0,a.w5)((()=>[(0,a._)("div",V,[Z,B,E,(0,a._)("div",null,[(0,a.Wm)(l,{outline:"",size:"lg",label:"I Agree",color:e.darkLightText,onClick:e.acceptRisk},null,8,["color","onClick"])])])])),_:1},8,["modelValue"])}const H=(0,a.aZ)({name:"NoticeModal",components:{GeneralModal:J.Z},props:{modelValue:{type:Boolean,required:!0},persistent:{type:Boolean,default:!1}},methods:{emitModalValue(e){this.$emit("update:modelValue",e)},acceptRisk(){this.$q.sessionStorage.set("accRK",!0),this.emitModalValue(!1)}},computed:{darkLightText(){return this.$q.dark.isActive?"light":"dark"},showDialog:{set:function(e){this.emitModalValue(e)},get:function(){return this.modelValue}}}});H.render=j;const F=H;R()(H,"components",{QBtn:S.Z});var Q=n(43797),U=n(40019);const G=(0,a.aZ)({name:"MainLayout",components:{NoticeModal:F,GeneralModal:J.Z,WalletConnectModal:D},setup(){const e=(0,b.Z)(),t=async()=>{e.dark.toggle()},n=()=>{const e=Object.keys(C.Qf),t=[];for(const n of e)t.push({label:C.Qf[n],value:n});return t};let o;(0,a.JJ)("$getChainIdOptions",n),U.log("xstarter constructor abi",w.abiUtils.getConstructorObj(A.Mt));const i=e.localStorage.getItem("walletconnect");let s,l,r=(0,v.iH)(i?"walletconnect":"metamask");(0,a.JJ)("$connectMethodToUse",r);let d=(0,v.iH)(!1);const u=(0,v.iH)(!1);(0,a.JJ)("$launchPadLoaded",d);let p=(0,v.iH)(C.qg);(0,a.JJ)("$jsonRPCEndpoint",p);const c=(0,v.iH)(void 0),m=(0,v.iH)(void 0);(0,a.JJ)("$ethereumProvider",c);let y=(0,v.iH)(void 0);(0,a.JJ)("$chainId",y);let h=(0,v.iH)({timestamp:0,blockNumber:0});(0,a.JJ)("$blockInfo",h);const g=(0,v.iH)(!1);(0,a.JJ)("$metamaskInstalled",g);const T=(0,v.iH)([]);(0,a.JJ)("$connectedAccounts",T);const f=(0,v.iH)(Boolean(g.value&&T.value.length>0));(0,a.JJ)("$connectedAndPermissioned",f);const _=async()=>{U.log("connecting using json rpc",p.value,"xdai"),o=await new k.ethers.providers.JsonRpcProvider(p.value),U.log("json rpc provider is",o),o&&(l=await new k.ethers.Contract(C.ZD.default,A.Mt,o),l&&(d.value=!0),o.on("block",(async e=>{U.log("received block event");const t=await o.getBlock();h.value={timestamp:t.timestamp,blockNumber:e}})))},q=async(e,t,n)=>{try{const a=await c.value.request({method:"wallet_watchAsset",params:{type:"ERC20",options:{address:e,symbol:t,decimals:18,image:n}}});a?U.log("was added"):U.log("not added")}catch(a){U.log(a)}};(0,a.JJ)("$metaMaskAssetAddRequest",q);const M=async(e,t)=>{let n=!1;try{await ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:e}]}),U.log("no error"),n=!0}catch(a){if(U.log("error is",a),4902===a.code||-32601===a.code)try{n=await c.value.request({method:"wallet_addEthereumChain",params:[t]}),n?U.log("chain was added"):U.log("chain not added")}catch(a){U.log(a),u.value=!0}else U.log("non switch error",a)}return n};(0,a.JJ)("$metaMaskEthereumChainAddRequest",M);const L=async()=>{"metamask"===r.value?(c.value.on("chainChanged",(e=>{window.location.reload()})),c.value.on("accountsChanged",(()=>{$(!0)}))):"walletconnect"===r.value&&(m.value.on("chainChanged",(e=>{window.location.reload()})),m.value.on("accountsChanged",(()=>{$(!0)})))},P=async(e=null)=>{if(U.log("wallet connect provider in connectusingwebprovide is",m.value),"walletconnect"===r.value&&m.value.connected)T.value=m.value.accounts,f.value=T.value.length>0;else if("metamask"===r.value&&g.value){U.log("meta mask installed");try{T.value=await c.value.request({method:"eth_accounts"})}catch(t){return void U.log(t)}f.value=g.value&&T.value.length>0}f.value?(o=new k.ethers.providers.Web3Provider("metamask"===r.value?c.value:m.value),s=o.getSigner(),U.log("provider in is",o),y.value=(await o.getNetwork())["chainId"],U.log("chain id in connect using webprovider is",y.value),l=C.ZD[y.value]?await new k.ethers.Contract(C.ZD[y.value],A.Mt,s):null,l&&(d.value=!0),await L(),o.on("block",(async e=>{U.log("received block event");const t=await o.getBlock();h.value={timestamp:t.timestamp,blockNumber:e}}))):(d.value=!1,o=void 0,s=void 0,l=void 0,U.log("connecteda"),e?window.location.reload():(o&&o.off("block"),await _()))},$=async(e=null)=>{c.value=await x()(),m.value||(m.value=await O()),g.value=!!c.value&&Boolean(c.value),g.value||m.value.connected?await P(e):await _()};(0,a.bv)((()=>{$()}));const I=async()=>{if(r.value="ethereum",g.value){if(U.log("ethereum provider",c.value),f.value)return;try{T.value=await c.value.request({method:"eth_requestAccounts"})}catch(e){}f.value=g.value&&T.value.length>0,f.value&&await $(),U.log(s,"signer value")}else U.log("please install metamask")};(0,a.JJ)("$connectEthereum",I);const J=(0,v.iH)(!1);(0,a.JJ)("$showWalletConnectModal",J);const O=async()=>{const e=new Q.Z({rpc:C.s5});return i&&await e.enable(),e},S=async()=>{r.value="walletconnect",f.value||(await m.value.enable(),T.value=m.value.accounts,f.value=m.value.connected&&T.value.length>0,f.value&&await $())};(0,a.JJ)("$connectEthereumWalletConnect",S);const W=()=>o;(0,a.JJ)("$getProvider",W);const N=()=>s;(0,a.JJ)("$getSigner",N);const R=()=>f;(0,a.JJ)("$getConnectedAndPermissioned",R);const D=()=>l;(0,a.JJ)("$getLaunchPadContract",D);const V=async(e,t=[])=>{const n=D();return U.log("launchpad is",n),await n[e](...t)};return(0,a.JJ)("$callLaunchPadFunction",V),{setDarkMode:t,connectEthereum:I,connectEthereumWalletConnect:S,checkExisting:$,getProvider:W,getSigner:N,getLaunchPadContract:D,connectUsingJsonRPCProvider:_,metaMaskEthereumChainAddRequest:M,metamaskInstalled:g,ethereumProvider:c,walletConnectProvider:m,connectedAccounts:T,connectedAndPermissioned:f,launchPadContract:l,launchPadLoaded:d,chainId:y,blockInfo:h,showSwitchChainManual:u,showWalletConnectModal:J}},data(){return{showNotice:!1,tabName:""}},computed:{darkLightText(){return this.$q.dark.isActive?"light":"dark"},darkLightTextReverse(){return this.$q.dark.isActive?"dark":"light"},connectBtnLabel(){if(U.log("connected permission",this.connectedAndPermissioned),this.connectedAndPermissioned){let e=this.connectedAccounts[0];return`${e.slice(0,6)}....${e.slice(e.length-4)}`}return this.metamaskInstalled?"Connect":"Install Metamask"}},methods:{connectOrInstallBtn(){if(!this.connectedAndPermissioned)if("Connect"===this.connectBtnLabel)this.showWalletConnectModal=!this.showWalletConnectModal;else{const e=new _.Z;e.startOnboarding()}},async signTx(){U.log("this signer",this.getSigner(),this.getProvider(),this.ethereumProvider.selectedAddress),U.log("connected accounts",this.connectedAccounts);const e=await this.getProvider().getBalance("0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc");U.log("response is",e,this.$ethers.utils.formatEther(e),e._isBigNumber)},async callContract(){const e=this.getLaunchPadContract(),t=await e.getProposals("0");U.log("get proposals",t);const n={address:e.address,topic:Object.values(e.filters)};e.on(n,(e=>{U.log("result in event is",e)})),U.log("ilo contract",e,t)}},mounted(){U.log("get provider",this.getProvider());try{this.showNotice=!this.$q.sessionStorage.getItem("accRK")}catch(e){U.log("error occurred reading from session",e),this.showNotice=!0}this.tabName=this.$route.name.split("_")[0],U.log("path",this.tabName)},watch:{jsonRPCEndpoint:async function(){await this.checkExisting(!1)}}});var z=n(83066),X=n(53812),K=n(39570),Y=n(57547),ee=n(3269),te=n(69721),ne=n(72652),ae=n(41762),oe=n(13747),ie=n(75096);G.render=T;const se=G;R()(G,"components",{QLayout:z.Z,QHeader:X.Z,QToolbar:K.Z,QTabs:Y.Z,QTab:ee.Z,QBadge:te.Z,QBtn:S.Z,QPageContainer:ne.Z,QFooter:ae.Z,QToolbarTitle:oe.Z,QAvatar:ie.Z})},37400:(e,t,n)=>{e.exports=n.p+"img/xstarter_dark_logo.3c81782b.png"},56607:(e,t,n)=>{e.exports=n.p+"img/xstarter_light_logo.2f86b50b.png"},36563:()=>{}}]);